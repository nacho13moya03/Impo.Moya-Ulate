//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIProyectoSC_601
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ImportadoraMoyaUlateEntities : DbContext
    {
        public ImportadoraMoyaUlateEntities()
            : base("name=ImportadoraMoyaUlateEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Canton> Canton { get; set; }
        public virtual DbSet<Carrito> Carrito { get; set; }
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<Direcciones> Direcciones { get; set; }
        public virtual DbSet<Distrito> Distrito { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Estado> Estado { get; set; }
        public virtual DbSet<Factura_Detalle> Factura_Detalle { get; set; }
        public virtual DbSet<Factura_Encabezado> Factura_Encabezado { get; set; }
        public virtual DbSet<Identificacion> Identificacion { get; set; }
        public virtual DbSet<Producto> Producto { get; set; }
        public virtual DbSet<Proveedores> Proveedores { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int ActualizarCategoriaSP(Nullable<int> iD_Categoria, string nombre_Categoria)
        {
            var iD_CategoriaParameter = iD_Categoria.HasValue ?
                new ObjectParameter("ID_Categoria", iD_Categoria) :
                new ObjectParameter("ID_Categoria", typeof(int));
    
            var nombre_CategoriaParameter = nombre_Categoria != null ?
                new ObjectParameter("Nombre_Categoria", nombre_Categoria) :
                new ObjectParameter("Nombre_Categoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCategoriaSP", iD_CategoriaParameter, nombre_CategoriaParameter);
        }
    
        public virtual int ActualizarCuentaUsuarioSP(Nullable<long> iD, string nombre, string apellido, string correo, string nuevaContrasenna, string telefono, Nullable<int> prov, Nullable<int> canton, Nullable<int> distrito, string direccion)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var nuevaContrasennaParameter = nuevaContrasenna != null ?
                new ObjectParameter("NuevaContrasenna", nuevaContrasenna) :
                new ObjectParameter("NuevaContrasenna", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var provParameter = prov.HasValue ?
                new ObjectParameter("Prov", prov) :
                new ObjectParameter("Prov", typeof(int));
    
            var cantonParameter = canton.HasValue ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(int));
    
            var distritoParameter = distrito.HasValue ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCuentaUsuarioSP", iDParameter, nombreParameter, apellidoParameter, correoParameter, nuevaContrasennaParameter, telefonoParameter, provParameter, cantonParameter, distritoParameter, direccionParameter);
        }
    
        public virtual int ActualizarEmpresaSP(Nullable<long> iD_Empresa, string nombre_empresa, string descripcion, string ubicacion)
        {
            var iD_EmpresaParameter = iD_Empresa.HasValue ?
                new ObjectParameter("ID_Empresa", iD_Empresa) :
                new ObjectParameter("ID_Empresa", typeof(long));
    
            var nombre_empresaParameter = nombre_empresa != null ?
                new ObjectParameter("Nombre_empresa", nombre_empresa) :
                new ObjectParameter("Nombre_empresa", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEmpresaSP", iD_EmpresaParameter, nombre_empresaParameter, descripcionParameter, ubicacionParameter);
        }
    
        public virtual int ActualizarEstadoCategoriaSP(Nullable<long> iD_Categoria)
        {
            var iD_CategoriaParameter = iD_Categoria.HasValue ?
                new ObjectParameter("ID_Categoria", iD_Categoria) :
                new ObjectParameter("ID_Categoria", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoCategoriaSP", iD_CategoriaParameter);
        }
    
        public virtual int ActualizarEstadoProveedorSP(Nullable<long> iD_Proveedor)
        {
            var iD_ProveedorParameter = iD_Proveedor.HasValue ?
                new ObjectParameter("ID_Proveedor", iD_Proveedor) :
                new ObjectParameter("ID_Proveedor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoProveedorSP", iD_ProveedorParameter);
        }
    
        public virtual int ActualizarEstadoUsuarioSP(Nullable<long> iD_Usuario)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarEstadoUsuarioSP", iD_UsuarioParameter);
        }
    
        public virtual int ActualizarProveedorSP(Nullable<long> iD_Proveedor, string nombre_Proveedor, string apellido_Proveedor, string direccion_Exacta, Nullable<long> empresa, string telefono, string correo)
        {
            var iD_ProveedorParameter = iD_Proveedor.HasValue ?
                new ObjectParameter("ID_Proveedor", iD_Proveedor) :
                new ObjectParameter("ID_Proveedor", typeof(long));
    
            var nombre_ProveedorParameter = nombre_Proveedor != null ?
                new ObjectParameter("Nombre_Proveedor", nombre_Proveedor) :
                new ObjectParameter("Nombre_Proveedor", typeof(string));
    
            var apellido_ProveedorParameter = apellido_Proveedor != null ?
                new ObjectParameter("Apellido_Proveedor", apellido_Proveedor) :
                new ObjectParameter("Apellido_Proveedor", typeof(string));
    
            var direccion_ExactaParameter = direccion_Exacta != null ?
                new ObjectParameter("Direccion_Exacta", direccion_Exacta) :
                new ObjectParameter("Direccion_Exacta", typeof(string));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(long));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProveedorSP", iD_ProveedorParameter, nombre_ProveedorParameter, apellido_ProveedorParameter, direccion_ExactaParameter, empresaParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int ActualizarRolUsuarioSP(Nullable<long> iD_Usuario)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarRolUsuarioSP", iD_UsuarioParameter);
        }
    
        public virtual int EliminarCategoriaSP(Nullable<long> iD_Categoria)
        {
            var iD_CategoriaParameter = iD_Categoria.HasValue ?
                new ObjectParameter("ID_Categoria", iD_Categoria) :
                new ObjectParameter("ID_Categoria", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCategoriaSP", iD_CategoriaParameter);
        }
    
        public virtual int EliminarEmpresaSP(Nullable<long> iD_Empresa)
        {
            var iD_EmpresaParameter = iD_Empresa.HasValue ?
                new ObjectParameter("ID_Empresa", iD_Empresa) :
                new ObjectParameter("ID_Empresa", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEmpresaSP", iD_EmpresaParameter);
        }
    
        public virtual int EliminarProveedorSP(Nullable<long> iD_Proveedor)
        {
            var iD_ProveedorParameter = iD_Proveedor.HasValue ?
                new ObjectParameter("ID_Proveedor", iD_Proveedor) :
                new ObjectParameter("ID_Proveedor", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProveedorSP", iD_ProveedorParameter);
        }
    
        public virtual int InactivarUsuarioSP(Nullable<long> codigoUsuario)
        {
            var codigoUsuarioParameter = codigoUsuario.HasValue ?
                new ObjectParameter("CodigoUsuario", codigoUsuario) :
                new ObjectParameter("CodigoUsuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InactivarUsuarioSP", codigoUsuarioParameter);
        }
    
        public virtual ObjectResult<IniciarSesionSP_Result> IniciarSesionSP(string correo, string contrasenna)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionSP_Result>("IniciarSesionSP", correoParameter, contrasennaParameter);
        }
    
        public virtual ObjectResult<string> PagarCarritoSP(Nullable<long> iD_Usuario)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PagarCarritoSP", iD_UsuarioParameter);
        }
    
        public virtual ObjectResult<RecuperarCuentaUsuarioSP_Result> RecuperarCuentaUsuarioSP(string correo)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecuperarCuentaUsuarioSP_Result>("RecuperarCuentaUsuarioSP", correoParameter);
        }
    
        public virtual int RegistrarCategoriaSP(string categoria, Nullable<int> estado_Categoria)
        {
            var categoriaParameter = categoria != null ?
                new ObjectParameter("Categoria", categoria) :
                new ObjectParameter("Categoria", typeof(string));
    
            var estado_CategoriaParameter = estado_Categoria.HasValue ?
                new ObjectParameter("Estado_Categoria", estado_Categoria) :
                new ObjectParameter("Estado_Categoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarCategoriaSP", categoriaParameter, estado_CategoriaParameter);
        }
    
        public virtual int RegistrarEmpresaSP(string nombre_empresa, string descripcion, string ubicacion)
        {
            var nombre_empresaParameter = nombre_empresa != null ?
                new ObjectParameter("Nombre_empresa", nombre_empresa) :
                new ObjectParameter("Nombre_empresa", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarEmpresaSP", nombre_empresaParameter, descripcionParameter, ubicacionParameter);
        }
    
        public virtual int RegistrarProveedorSP(string nombre_Proveedor, string apellido_Proveedor, Nullable<int> tipo, string cedula_Proveedor, string direccion_Exacta, Nullable<int> estado_Proveedor, Nullable<long> empresa, string telefono, string correo)
        {
            var nombre_ProveedorParameter = nombre_Proveedor != null ?
                new ObjectParameter("Nombre_Proveedor", nombre_Proveedor) :
                new ObjectParameter("Nombre_Proveedor", typeof(string));
    
            var apellido_ProveedorParameter = apellido_Proveedor != null ?
                new ObjectParameter("Apellido_Proveedor", apellido_Proveedor) :
                new ObjectParameter("Apellido_Proveedor", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var cedula_ProveedorParameter = cedula_Proveedor != null ?
                new ObjectParameter("Cedula_Proveedor", cedula_Proveedor) :
                new ObjectParameter("Cedula_Proveedor", typeof(string));
    
            var direccion_ExactaParameter = direccion_Exacta != null ?
                new ObjectParameter("Direccion_Exacta", direccion_Exacta) :
                new ObjectParameter("Direccion_Exacta", typeof(string));
    
            var estado_ProveedorParameter = estado_Proveedor.HasValue ?
                new ObjectParameter("Estado_Proveedor", estado_Proveedor) :
                new ObjectParameter("Estado_Proveedor", typeof(int));
    
            var empresaParameter = empresa.HasValue ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(long));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarProveedorSP", nombre_ProveedorParameter, apellido_ProveedorParameter, tipoParameter, cedula_ProveedorParameter, direccion_ExactaParameter, estado_ProveedorParameter, empresaParameter, telefonoParameter, correoParameter);
        }
    
        public virtual int RegistrarUsuarioSP(Nullable<int> tipo, string identificacion, string nombre, string apellido, string correo, string contrasenna, string telefono)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var identificacionParameter = identificacion != null ?
                new ObjectParameter("Identificacion", identificacion) :
                new ObjectParameter("Identificacion", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuarioSP", tipoParameter, identificacionParameter, nombreParameter, apellidoParameter, correoParameter, contrasennaParameter, telefonoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
