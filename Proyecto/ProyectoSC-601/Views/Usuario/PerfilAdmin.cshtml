@model ProyectoSC_601.Entities.UsuarioEnt
@{
    ViewBag.Title = "PerfilCLiente";
    <link href="~/Assets/css/perfilClienteStyle.css" rel="stylesheet">
    Layout = "~/Views/Shared/_Layout_deAdmin.cshtml";
    <!-- Sweet Alert -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js"></script>

}
<div class="container-xl px-4 mt-4">
    <hr class="mt-0 mb-4">
    <div class="row justify-content-center">
        <div class="col-xl-8" style="margin-left:auto;margin-top:5%; margin-bottom:2%; margin-right: auto">
            <div class="card mb-4" style="border: none; box-shadow: none; background-color: transparent">
                <div class="card-body ">
                    @using (Html.BeginForm("PerfilAdmin", "Usuario", FormMethod.Post, new { @class = "pt-3", @novalidate = "novalidate", onsubmit = "return validarContrasenas();" }))
                    {
                        <div class="row">
                            <div class="col-xl-12">
                                <div class="card mb-4">
                                    <div class="card-header" style="background-color: #EEEEEE; ">Información Personal</div>
                                    <div class="card-body ">
                                        @Html.HiddenFor(m => m.ID_Usuario)
                                        @Html.HiddenFor(m => m.Contrasenna_Usuario)
                                        @Html.HiddenFor(m => m.ID_Direccion)
                                        <div class="row gx-3 mb-3">
                                            <div class="col-md-6">
                                                <label class="small mb-1" for="tipo">Tipo</label>
                                                @Html.TextBoxFor(m => m.Nombre_Identificacion, new { @readOnly = "readOnly", @style = "background-color: #eeeeee", @class = "form-control", @type = "text" })
                                            </div>
                                            <div class="col-md-6">
                                                <label class="small mb-1" for="identificacion">Identificación</label>
                                                @Html.TextBoxFor(m => m.Identificacion_Usuario, new { @readOnly = "readOnly", @style = "background-color: #eeeeee", @class = "form-control", @type = "text" })
                                            </div>
                                        </div>
                                        @if (Model.Nombre_Identificacion.Equals("Cédula Jurídica"))
                                        {
                                            <div class="mb-3">
                                                <label class="small mb-1" for="nombre">Nombre</label>
                                                @Html.TextBoxFor(m => m.Nombre_Usuario, new { @class = "form-control", @placeholder = "Nombre", @type = "text" })
                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                    @Html.ValidationMessageFor(m => m.Nombre_Usuario, "", new { @style = "color: red;" })
                                                </div>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="row gx-3 mb-3">
                                                <div class="col-md-6">
                                                    <label class="small mb-1" for="nombre">Nombre</label>
                                                    @Html.TextBoxFor(m => m.Nombre_Usuario, new { @class = "form-control", @placeholder = "Nombre", @type = "text" })
                                                    <div style="align-self: flex-start; font-size: 10px !important;margin-top:2px!important;margin-left:3px!important;">
                                                        @Html.ValidationMessageFor(m => m.Nombre_Usuario, "", new { @style = "color: red;" })
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <label class="small mb-1" for="apellido">Primer Apellido</label>
                                                    @Html.TextBoxFor(m => m.Apellido_Usuario, new { @class = "form-control", @placeholder = "Primer Apellido", @type = "text" })
                                                    <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                        @Html.ValidationMessageFor(m => m.Apellido_Usuario, "", new { @style = "color: red;" })
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <div class="row gx-3 mb-3">
                                            <div class="col-md-6">
                                                <label class="small mb-1" for="correo">Correo Electrónico</label>
                                                @Html.TextBoxFor(m => m.Correo_Usuario, new { @class = "form-control", @placeholder = "Correo Electrónico", @type = "email", required = "required" })
                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                    @Html.ValidationMessageFor(m => m.Correo_Usuario, "", new { @style = "color: red;" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <label class="small mb-1" for="telefono">Teléfono</label>
                                                @Html.TextBoxFor(m => m.Telefono_Usuario, new { @class = "form-control", @placeholder = "Teléfono", @type = "text", required = "required" })
                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;;">
                                                    @Html.ValidationMessageFor(m => m.Telefono_Usuario, "", new { @style = "color: red;" })
                                                </div>
                                            </div>
                                        </div>



                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-12">
                                <div class="card mb-4">
                                    <div class="card-header" style="background-color: #EEEEEE; ">
                                        Ubicación
                                    </div>
                                    <div class="card-body ">
                                        <div class="row gx-3 mb-3" style="margin-top:2.5%!important;">
                                            <div class="col-md-4">
                                                <label class="small mb-1" for="provincia">Provincia</label>

                                                @Html.DropDownListFor(m => m.ID_Provincia, (ViewBag.Provincias as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>(), "Seleccione una opción", new { @class = "form-control provincia-dropdown", required = "required" })

                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                    @Html.ValidationMessageFor(m => m.ID_Provincia, "", new { @style = "color: red;" })

                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <label class="small mb-1" for="canton">Cantón</label>
                                                @Html.DropDownListFor(m => m.ID_Canton, (ViewBag.Cantones as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>(), "Seleccione una opción", new { @class = "form-control canton-dropdown", required = "required", disabled = ViewBag.Provincias == null ? "disabled" : "" })

                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                    @Html.ValidationMessageFor(m => m.ID_Canton, "", new { @style = "color: red;" })
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <label class="small mb-1" for="distrito">Distrito</label>
                                                @Html.DropDownListFor(m => m.ID_Distrito, (ViewBag.Distritos as IEnumerable<SelectListItem>) ?? Enumerable.Empty<SelectListItem>(), "Seleccione una opción", new { @class = "form-control distrito-dropdown", required = "required", disabled = ViewBag.Cantones == null ? "disabled" : "" })

                                                <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                    @Html.ValidationMessageFor(m => m.ID_Distrito, "", new { @style = "color: red;" })
                                                </div>
                                            </div>
                                        </div>


                                        <div class="mb-3">
                                            <label class="small mb-1" for="direccion">Dirección Exacta</label>

                                            @Html.TextAreaFor(m => m.Direccion_Exacta, new { rows = 3, cols = 20, @class = "form-control", @placeholder = "Ubicación Exacta", @type = "text", required = "required" })

                                            <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                @Html.ValidationMessageFor(m => m.Direccion_Exacta, "", new { @style = "color: red;" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-xl-12">
                                <div class="card mb-4">
                                    <div class="card-header" style="background-color: #EEEEEE; ">Seguridad</div>
                                    <div class="card-body ">
                                        <span class="small" style="color: gray;font-style:italic;">En este espacio se puede cambiar la contraseña</span>

                                        <div class="mb-3" style="margin-top:2.5%!important;">
                                            <div class="form-group position-relative">
                                                <label class="small mb-1" for="password">Nueva Contraseña</label>
                                                @Html.PasswordFor(m => m.NuevaContrasenna_Usuario, new { @class = "form-control", @placeholder = "Nueva Contraseña" })
                                                <i class="bi bi-eye-slash toggle-password" style="cursor: pointer; position: absolute; right: 15px; top: 70%; transform: translateY(-50%); font-size: 1.5em;"></i>
                                            </div>
                                            <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                @Html.ValidationMessageFor(m => m.NuevaContrasenna_Usuario, "", new { @style = "color: red;" })
                                            </div>
                                        </div>
                                        <div class="mb-3" style="margin-top:2.5%!important;">
                                            <div class="form-group position-relative">
                                                <label class="small mb-1" for="password">Confirmar Contraseña</label>
                                                @Html.PasswordFor(m => m.ConfirContra, new { @class = "form-control", @placeholder = "Confirmar Contraseña" })
                                                <i class="bi bi-eye-slash toggle-password" style="cursor: pointer; position: absolute; right: 15px; top: 70%; transform: translateY(-50%); font-size: 1.5em;"></i>
                                            </div>
                                            <span style="height: 5px; display: block;"></span>
                                            <div class="error-container">
                                                <span id="confirm-password-error" style="color: red; font-size: 10px; display: none;margin-left:5px;">Este campo es obligatorio.</span>
                                            </div>
                                            <div style="align-self: flex-start; font-size: 10px !important; margin-top: 2px !important; margin-left: 3px !important;">
                                                @Html.ValidationMessageFor(m => m.ConfirContra, "", new { @style = "color: red;" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-12">
                                <div class="text-center" style=" margin-bottom: 5%;">
                                    <button class="btn btn-success" type="submit"><i class="bi bi-floppy"></i> Guardar</button>
                                    <a href="javascript:void(0);" onclick="confirmarInactivarCliente(@Model.ID_Usuario)" class="btn btn-danger" style="color: white;margin-left:2%;"> <i class="bi bi-trash3"></i> Eliminar</a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="~/Assets/js/Cliente.js"></script>

    <script>
        function validarContrasenas() {
            var nuevaContrasena = document.getElementById("NuevaContrasenna_Usuario").value.trim();
            var confirmarContrasena = document.getElementById("ConfirContra").value.trim();
            var confirmarContrasenaError = document.getElementById("confirm-password-error");

            // Si ambos campos están vacíos, permitir el envío del formulario
            if (nuevaContrasena === "" && confirmarContrasena === "") {
                // Ocultar el texto de error
                confirmarContrasenaError.style.display = "none";
                return true;
            }

            // Si el campo de nueva contraseña tiene datos pero el de confirmar contraseña está vacío
            if (nuevaContrasena !== "" && confirmarContrasena === "") {
                confirmarContrasenaError.innerText = "Este campo es obligatorio.";
                confirmarContrasenaError.style.display = "block";
                return false;
            }

            // Si ambos campos tienen información, verificar que coincidan
            if (nuevaContrasena !== confirmarContrasena) {
                confirmarContrasenaError.style.display = "none";
                Swal.fire({
                    title: "Contraseñas no coinciden",
                    text: "Las contraseñas ingresadas no coinciden. Por favor, verifícalas e inténtalo de nuevo.",
                    icon: "error"
                });
                return false;
            }

            // Si llega aquí, ambas contraseñas son iguales, permitir el envío del formulario
            // Ocultar el texto de error
            confirmarContrasenaError.style.display = "none";
            return true;
        }

    </script>

    <script>
        //Funcion para mostrar mensaje de alerta
        function confirmarInactivarCliente(idCliente) {
            Swal.fire({
                title: '¿Estás seguro?',
                text: 'Si deseas recuperar la cuenta deberás contactar a la Importadora',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#6282a9',
                cancelButtonColor: '#354461',
                confirmButtonText: 'Sí, Inactivar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Si el usuario confirma, redirige a la acción de inactivar cliente
                    window.location.href = '/Usuario/InactivarUsuario?q=' + idCliente;
                }
            });
        }
    </script>

    <script>
        $(document).ready(function () {
            // Variables para los dropdowns
            var provinciaDropdown = $('.provincia-dropdown');
            var cantonDropdown = $('.canton-dropdown');
            var distritoDropdown = $('.distrito-dropdown');

            // Función para habilitar o deshabilitar dropdowns
            function toggleDropdowns() {
                var provinciaSelected = provinciaDropdown.val();
                var cantonSelected = cantonDropdown.val();

                // Verificar que tanto la provincia como el cantón tengan opciones válidas
                var enableCanton = provinciaSelected !== "";
                var enableDistrito = provinciaSelected && cantonSelected;

                cantonDropdown.prop('disabled', !enableCanton);
                distritoDropdown.prop('disabled', !enableDistrito);

                // Restablecer los valores a la opción predeterminada si la provincia no tiene una opción válida
                if (!enableCanton) {
                    cantonDropdown.val("");
                    distritoDropdown.val("");
                }

                // Restablecer el valor del distrito si el cantón no tiene una opción válida
                if (!enableDistrito) {
                    distritoDropdown.val("");
                }

            }

            // Asociar la función al cambio de selección en los dropdowns
            $('.provincia-dropdown, .canton-dropdown').change(toggleDropdowns);

            // Llamar a la función inicialmente para configurar el estado inicial
            toggleDropdowns();
        });
    </script>
    <script>
    $(document).ready(function () {
        var provinciaDropdown = $('.provincia-dropdown');
        var cantonDropdown = $('.canton-dropdown');
        var distritoDropdown = $('.distrito-dropdown');

        function cargarCantones() {
            var idProvincia = provinciaDropdown.val();
            if (idProvincia !== "") {
                $.ajax({
                    url: '@Url.Action("cargarCantones", "Usuario")',
                    type: 'GET',
                    data: { idProvincia: idProvincia },
                    success: function (data) {
                        // Limpiar el dropdown de cantones antes de agregar nuevos datos
                        cantonDropdown.empty();

                        // Agregar nuevos datos al dropdown de cantones
                        $.each(data, function (index, item) {
                            cantonDropdown.append($('<option>', {
                                value: item.Value,
                                text: item.Text
                            }));
                        });

                        cantonDropdown.prop('disabled', false);
                    },
                    error: function () {
                        // Manejar errores si es necesario
                    }
                });
            } else {
                // Limpiar y deshabilitar el dropdown de cantones si no se selecciona una provincia
                cantonDropdown.empty().prop('disabled', true);
                // Limpiar y deshabilitar el dropdown de distritos
                distritoDropdown.empty().prop('disabled', true);
            }
        }

        function cargarDistritos() {
            var idCanton = cantonDropdown.val();
            if (idCanton !== "") {
                $.ajax({
                    url: '@Url.Action("cargarDistritos", "Usuario")',
                    type: 'GET',
                    data: { idCanton: idCanton },
                    success: function (data) {
                        // Limpiar el dropdown de distritos antes de agregar nuevos datos
                        distritoDropdown.empty();

                        // Agregar nuevos datos al dropdown de distritos
                        $.each(data, function (index, item) {
                            distritoDropdown.append($('<option>', {
                                value: item.Value,
                                text: item.Text
                            }));
                        });

                        // Habilitar el dropdown de distritos
                        distritoDropdown.prop('disabled', false);
                    },
                    error: function () {
                        // Manejar errores si es necesario
                    }
                });
            } else {
                // Limpiar y deshabilitar el dropdown de distritos si no se selecciona un cantón
                distritoDropdown.empty().prop('disabled', true);
            }
        }

        // Asociar las funciones al cambio de selección en los dropdowns
        provinciaDropdown.change(cargarCantones);
        cantonDropdown.change(cargarDistritos);

        // Llamar a la función inicialmente para configurar el estado inicial
        //cargarCantones();
        //cargarDistritos();
    });
    </script>

    <script>
        // Función para actualizar el contador de productos en el carrito
        function actualizarContadorCarrito() {
            $.ajax({
                url: '/Producto/Catalogo',
                type: 'GET',
                success: function (data) {
                    // Actualizar el valor del contador en el HTML
                    $('#contador-carrito').text(data);
                },
                error: function () {
                    console.log('Error al actualizar el contador del carrito.');
                }
            });
        }

        // Llamar a la función de actualización cuando se cargue la página
        $(document).ready(function () {
            actualizarContadorCarrito();
        });

    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.addEventListener("click", function (event) {
                if (event.target.classList.contains("toggle-password")) {
                    var passwordInput = event.target.parentNode.querySelector("input[type='password']");
                    if (passwordInput.type === "password") {
                        passwordInput.type = "text";
                        event.target.className = "bi bi-eye";
                    } else {
                        passwordInput.type = "password";
                        event.target.className = "bi bi-eye-slash";
                    }

                    event.target.addEventListener("click", function () {
                        if (passwordInput.type === "password") {
                            passwordInput.type = "text";
                            event.target.className = "bi bi-eye";
                        } else {
                            passwordInput.type = "password";
                            event.target.className = "bi bi-eye-slash";
                        }
                    });
                }
            });
        });
    </script>
