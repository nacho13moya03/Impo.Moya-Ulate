﻿@model PagedList.IPagedList<ProyectoSC_601.Entities.InventarioEnt>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Catalogo";
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.1.5/dist/sweetalert2.min.js"></script>
}
<style>
    .badge-custom {
        background-color: red; /* Fondo rojo */
        color: white; /* Texto blanco */
        border: 2px solid red; /* Borde rojo */
        border-radius: 50%; /* Borde redondeado para formar un círculo */
        padding: 1px 5px; /* Espaciado interno */
        font-size: 12px; /* Tamaño de fuente */
    }
</style>

<section id="cata">
    <div class="container">
        <div class="row" style="margin-top: 3%!important;">

            <div class="col-md-2" style="margin-bottom:5%!important;">
                <div class="card">
                    <div class="card-header" style="background-color: #6282a9; color:white;">
                        <h6 class="mb-0">Categorías</h6>
                    </div>

                    <div class="card-body">
                        <div class="card-body">
                            @foreach (var categoria in ViewBag.Categorias)
                            {
                                int categoriaId = int.Parse(categoria.Value);
                                bool isChecked = ViewBag.CategoriasSeleccionadas != null && ViewBag.CategoriasSeleccionadas.Contains(categoriaId);

                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="chkCategoria-@categoriaId" value="@categoriaId" onchange="filtrarPorCategoria('@categoriaId')" @(isChecked ? "checked" : "")>
                                    <label class="form-check-label" for="chkCategoria-@categoriaId">@categoria.Text</label>
                                </div>
                            }
                        </div>


                    </div>
                </div>
            </div>

            <div class="col-md-9">
                <div id="productoCarousel" class="carousel slide" data-bs-ride="carousel">

                    <div class="carousel-inner">

                        @if (Model.Count() > 0)
                        {
                            var itemsPerRow = 3;
                            var totalRows = (int)Math.Ceiling((double)Model.Count() / (itemsPerRow * 4));

                            for (int row = 0; row < totalRows; row++)
                            {
                                <div class="carousel-item @if (row == 0) { <text>active</text> }">
                                    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">

                                        @foreach (var currentItem in Model.Skip(row * itemsPerRow * 4).Take(itemsPerRow * 4))
                                        {
                                            if (currentItem.Estado == 1 && currentItem.Cantidad > 0)
                                            {
                                                <div class="col mb-4" data-categoria="@currentItem.ID_Categoria">
                                                    <div class="card h-100">
                                                        @if (currentItem.Cantidad <= 5)
                                                        {
                                                            <div class="badge bg-danger text-white position-absolute" style="top: 0.5rem; right: 0.5rem;">@currentItem.Cantidad Disponibles</div>
                                                        }
                                                        <div class="text-center">

                                                            <img src="@currentItem.Imagen" class="card-img-top" alt="@currentItem.Nombre" style="width:250px; height:155px">

                                                        </div>
                                                        <div class="card-body p-2">
                                                            <div class="text-center">
                                                                <p style="text-decoration:none;color:black;"><h5 class="card-title">@currentItem.Nombre</h5></p>
                                                                <p class="card-text">₡@currentItem.Precio</p>
                                                            </div>
                                                        </div>
                                                        <div class="text-center" style="margin-bottom:7%;margin-top:4%;">
                                                            @if (Session["ID_Usuario"] != null)
                                                            {

                                                                <button class="btn btn-outline-dark mt-auto" onclick="mostrarModal('@currentItem.ID_Producto', '@currentItem.Nombre', '@currentItem.Descripcion', '@currentItem.Precio', '@currentItem.Imagen', '@currentItem.Cantidad', '@currentItem.Estado', true)">Ver Detalles</button>


                                                            }
                                                            else
                                                            {

                                                                <button class="btn btn-outline-dark mt-auto" onclick="mostrarModal('@currentItem.ID_Producto', '@currentItem.Nombre', '@currentItem.Descripcion', '@currentItem.Precio', '@currentItem.Imagen', '@currentItem.Cantidad', '@currentItem.Estado', false)">Ver Detalles</button>

                                                            }
                                                        </div>

                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 alert alert-info" role="alert" style="text-align: center; margin-top: 5%;">
                                No hay productos registrados en este momento
                            </div>
                        }
                    </div>

                    @if (Model.TotalItemCount > 9)
                    {
                        <div class="pagination-container">
                            @Html.PagedListPager(Model, pagina => Url.Action("Catalogo", new { pagina, categorias = Request.QueryString["categorias"] }))
                        </div>
                    }


                </div>
            </div>

        </div>
    </div>
</section>


<!-- Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <!-- Agregar la clase modal-lg aquí -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Detalles del Producto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="productModalBody">
                <!-- Aquí se cargarán los detalles del producto -->
            </div>
        </div>
    </div>
</div>


<script>
    // Función filtrar por categorías
    function filtrarPorCategoria() {
        var url = new URL(window.location.href); // obtener la URL actual

        // Obtener categorías seleccionadas
        var categoriasSeleccionadas = $(":checkbox:checked")
            .map(function () {
                return $(this).val();
            }).get();

        // Construir URL con parámetros
        var url = new URL(window.location);
        url.searchParams.set("pagina", 1);

        // Verificar si hay categorías seleccionadas
        if (categoriasSeleccionadas.length > 0) {
            url.searchParams.set("categorias", categoriasSeleccionadas.join(","))
        } else {
            url.searchParams.delete("categorias"); // Eliminar el parámetro "categorias" si no hay categorías seleccionadas
        }

        // Redireccionar
        window.location.href = url.toString();

    }
</script>

<script>
    function mostrarModal(productID, nombre, descripcion, precio, imagen, cantidad, estado, sesionActiva) {
        // Actualiza el contenido del modal con los detalles del producto
        var estadoValue = parseInt(estado); // Convertir estado a número entero

        $('#productModalBody').html(`

            <div class="row justify-content-center">
                ${estadoValue === 1 ?
                `<div class="col-lg-10 mb-5" style="margin:0%!important;">
                    <div class=" h-250 position-relative" style="height: auto!important;padding:5%!important;">
                        ${cantidad <= 5 ?
                    `<div class="badge bg-danger text-white position-absolute" style="top: 0.5rem; left: 0.5rem; z-index: 1; margin-top: 6% !important; margin-left:6% !important; ">${cantidad} Disponibles</div>` : ''}
                        <div class="row">
                            <div class="col-md-6" style="border: 2px solid #6282a9; border-radius: 10px; ">
                                <div class="card-img-top text-center" style="margin-top: 8%;">
                                    <img src="${imagen}" class="img-fluid" style="width:100%; height:200px; margin-bottom: 20px">
                                </div>
                            </div>
                            <div class="col-md-6 ">
                                <div class=" p-6" style="margin-left:5%;margin-top:2%;">
                                    <h3 class="text-center text-lg-start">${nombre}</h3>
                                    <p class="text-center text-lg-start">${descripcion}</p>
                                    <p class="text-center text-lg-start">₡${precio}</p>
                                   ${sesionActiva === true ?
                    ` <div class="d-flex align-items-center justify-content-center justify-content-lg-start">
                                        <p class="me-2 mb-0">Cantidad:</p>
                                        <div class="col-3">

                                            <input id=prd-${productID} type="number" class="form-control" min="1">

                                            </div>
                                        </div>
                                        <div class="text-center text-lg-start mt-3" style="margin-top:8%!important;">
                                        <a class="btn" style="background-color: #354461; color: white; margin-left:2%;margin-top:2%;" onclick="RegistrarProducto(${productID}, ${cantidad})">Agregar al Carrito</a>
                                    </div>` :
                    ''
                }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>` : ''}
                </div>

        `);
        // Muestra el modal
        $('#productModal').modal('show');
    }
</script>

<script>

  function RegistrarProducto(ID_Producto, disponible) {
      let cantidad = $("#prd-" + ID_Producto).val();

      if (cantidad > disponible) {
            Swal.fire({
              title: 'Error en la Solicitud',
                text: 'No hay suficiente cantidad disponible del producto',
              icon: 'info',
              confirmButtonColor: '#6282a9',
              confirmButtonText: 'Ok'
          });
      }
      else {

            $.ajax({
            url: '/Carrito/RegistrarCarrito',
            type: "GET",
            data:
            {
              "cantidad": cantidad,
                "ID_Producto": ID_Producto
            },
            success: function (data) {
               window.location.href = '@Url.Action("Catalogo", "Producto")';
            }
        });

      }
  }

</script>

<script>
    // Función para actualizar el contador de productos en el carrito
    function actualizarContadorCarrito() {
        $.ajax({
            url: '/Producto/Catalogo',
            type: 'GET',
            success: function (data) {
                // Actualizar el valor del contador en el HTML
                $('#contador-carrito').text(data);
            },
            error: function () {
                console.log('Error al actualizar el contador del carrito.');
            }
        });
    }

    // Llamar a la función de actualización cuando se cargue la página
    $(document).ready(function () {
        actualizarContadorCarrito();
    });

</script>