@model PagedList.IPagedList<ProyectoSC_601.Entities.InventarioEnt>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Catalogo";
    <link href="~/Assets/css/style.css" rel="stylesheet">
    <link href="~/Assets/css/catalogo.css" rel="stylesheet">
}

<section id="cata">
    <div class="container">
        <div class="row" style="margin-top: 5%!important;">

            <div class="col-md-2" style="margin-bottom:5%!important;">
                <div class="card">
                    <div class="card-header" style="background-color: #6282a9; color:white;">
                        <h6 class="mb-0">Categorías</h6>
                    </div>

                    <div class="card-body">
                        @foreach (var categoria in ViewBag.Categorias)
                        {
                            <div class="form-check">
                                @{
                                    bool isChecked = false;
                                    if (ViewBag != null && ViewBag.CategoriaSeleccionada != null)
                                    {
                                        isChecked = categoria.Value == ViewBag.CategoriaSeleccionada.ToString();
                                    }


                                }
                                <input type="checkbox" class="form-check-input" id="chkCategoria-@categoria.Value" value="@categoria.Value" onchange="filtrarPorCategoria('@categoria.Value')" @if (isChecked) { <text> checked</text> }>
                                <label class="form-check-label" for="chkCategoria-@categoria.Value">@categoria.Text</label>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="col-md-9">
                <div id="productoCarousel" class="carousel slide" data-bs-ride="carousel">

                    <div class="carousel-inner">

                        @if (Model.Count() > 0)
                        {
                            var itemsPerRow = 3;
                            var totalRows = (int)Math.Ceiling((double)Model.Count() / (itemsPerRow * 4));

                            for (int row = 0; row < totalRows; row++)
                            {
                                <div class="carousel-item @if (row == 0) { <text>active</text> }">
                                    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">

                                        @foreach (var currentItem in Model.Skip(row * itemsPerRow * 4).Take(itemsPerRow * 4))
                                        {
                                            if (currentItem.Estado == 1)
                                            {
                                                <div class="col mb-4" data-categoria="@currentItem.ID_Categoria">
                                                    <div class="card h-100">
                                                        @if (currentItem.Cantidad <= 5)
                                                        {
                                                            <div class="badge bg-danger text-white position-absolute" style="top: 0.5rem; right: 0.5rem;">@currentItem.Cantidad Disponibles</div>
                                                        }
                                                        <div class="text-center">
                                                            <a href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })">
                                                                <img src="@currentItem.Imagen" class="card-img-top" alt="@currentItem.Nombre" style="width:250px; height:175px">
                                                            </a>
                                                        </div>
                                                        <div class="card-body p-4">
                                                            <div class="text-center">
                                                                <a href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })" style="text-decoration:none;color:black;"><h5 class="card-title">@currentItem.Nombre</h5></a>
                                                                <p class="card-text">₡@currentItem.Precio</p>
                                                            </div>
                                                        </div>
                                                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                                            <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })">Ver Detalles</a></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 alert alert-info" role="alert" style="text-align: center; margin-top: 5%;">
                                No hay productos registrados en este momento
                            </div>
                        }
                    </div>

                    @if (Model.TotalItemCount > 9)
                    {
                        <div class="pagination-container">
                            @Html.PagedListPager(Model, pagina => Url.Action("Catalogo", new { pagina }))
                        </div>
                    }

                </div>
            </div>

        </div>
    </div>
</section>


<script>
    function filtrarPorCategoria(idCategoria) {
        var paginaActual = obtenerPaginaActual(); // obtener la página actual
        var url = new URL(window.location.href); // obtener la URL actual

        if (paginaActual > 1) {
            // Está en página mayor a 1
            url.searchParams.set('pagina', 1); 
        }

        if (url.searchParams.get('categoria') == idCategoria) {
            url.searchParams.delete('categoria');
        } else {
            // Si no, establecer la nueva categoría seleccionada
            url.searchParams.set('categoria', idCategoria);
        }

        // Redirigir a la nueva URL
        window.location.href = url.toString();

        // Actualizar la visualización de las categorías
        actualizarVisualizacionCategorias();
    }
    function obtenerPaginaActual() {
        var url = new URL(location.href);
        return parseInt(url.searchParams.get("pagina"));
    }

    function actualizarVisualizacionCategorias() {
        // Categorias seleccionadas
        var categoriasSeleccionadas = $(":checkbox:checked").map(function () {
            return $(this).attr("id").split("-")[1];
        }).get();

        // Mostrar solo los productos de las categorías seleccionadas
        if (categoriasSeleccionadas.length > 0) {
            $(".col[data-categoria]").hide();
            categoriasSeleccionadas.forEach(function (categoria) {
                $(".col[data-categoria='" + categoria + "']").show();
            });
        } else {
            // Mostrar todos los productos si ninguna categoría está seleccionada
            $(".col[data-categoria]").show();
        }

        // Verificar si se deben mostrar los controles de paginación
        var productosVisibles = $(".col[data-categoria]:visible").length;
        if (productosVisibles < 9) {
            $(".pagination-container").hide();
        } else {
            $(".pagination-container").show();
        }

        // Actualizar el carrusel
        $('#productoCarousel').carousel(0);
    }

</script>