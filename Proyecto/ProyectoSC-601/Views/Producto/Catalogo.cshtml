﻿@model PagedList.IPagedList<ProyectoSC_601.Entities.InventarioEnt>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Catalogo";
    <link href="~/Assets/css/style.css" rel="stylesheet">
    <link href="~/Assets/css/catalogo.css" rel="stylesheet">
}

<section id="cata">
    <div class="container">
        <div class="row" style="margin-top: 3%!important;">

            <div class="col-md-2" style="margin-bottom:5%!important;">
                <div class="card">
                    <div class="card-header" style="background-color: #6282a9; color:white;">
                        <h6 class="mb-0">Categorías</h6>
                    </div>

                    <div class="card-body">
                        <div class="card-body">
                            @foreach (var categoria in ViewBag.Categorias)
                            {
                                int categoriaId = int.Parse(categoria.Value);
                                bool isChecked = ViewBag.CategoriasSeleccionadas != null && ViewBag.CategoriasSeleccionadas.Contains(categoriaId);

                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" id="chkCategoria-@categoriaId" value="@categoriaId" onchange="filtrarPorCategoria('@categoriaId')" @(isChecked ? "checked" : "")>
                                    <label class="form-check-label" for="chkCategoria-@categoriaId">@categoria.Text</label>
                                </div>
                            }
                        </div>


                    </div>
                </div>
            </div>

            <div class="col-md-9">
                <div id="productoCarousel" class="carousel slide" data-bs-ride="carousel">

                    <div class="carousel-inner">

                        @if (Model.Count() > 0)
                        {
                            var itemsPerRow = 3;
                            var totalRows = (int)Math.Ceiling((double)Model.Count() / (itemsPerRow * 4));

                            for (int row = 0; row < totalRows; row++)
                            {
                                <div class="carousel-item @if (row == 0) { <text>active</text> }">
                                    <div class="row row-cols-1 row-cols-md-2 row-cols-xl-3 justify-content-center">

                                        @foreach (var currentItem in Model.Skip(row * itemsPerRow * 4).Take(itemsPerRow * 4))
                                        {
                                            if (currentItem.Estado == 1)
                                            {
                                                <div class="col mb-4" data-categoria="@currentItem.ID_Categoria">
                                                    <div class="card h-100">
                                                        @if (currentItem.Cantidad <= 5)
                                                        {
                                                            <div class="badge bg-danger text-white position-absolute" style="top: 0.5rem; right: 0.5rem;">@currentItem.Cantidad Disponibles</div>
                                                        }
                                                        <div class="text-center">
                                                            <a href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })">
                                                                <img src="@currentItem.Imagen" class="card-img-top" alt="@currentItem.Nombre" style="width:250px; height:155px">
                                                            </a>
                                                        </div>
                                                        <div class="card-body p-4">
                                                            <div class="text-center">
                                                                <a href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })" style="text-decoration:none;color:black;"><h5 class="card-title">@currentItem.Nombre</h5></a>
                                                                <p class="card-text">₡@currentItem.Precio</p>
                                                            </div>
                                                        </div>
                                                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                                            <div class="text-center"><a class="btn btn-outline-dark mt-auto" href="@Url.Action("ProductoDetalle", "Producto", new { q = currentItem.ID_Producto })">Ver Detalles</a></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }

                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-12 alert alert-info" role="alert" style="text-align: center; margin-top: 5%;">
                                No hay productos registrados en este momento
                            </div>
                        }
                    </div>

                    @if (Model.TotalItemCount > 9)
                    {
                        <div class="pagination-container">
                            @Html.PagedListPager(Model, pagina => Url.Action("Catalogo", new { pagina, categorias = Request.QueryString["categorias"] }))
                        </div>
                    }


                </div>
            </div>

        </div>
    </div>
</section>


<script>
    // Función filtrar por categorías
    function filtrarPorCategoria() {
        var url = new URL(window.location.href); // obtener la URL actual

        // Obtener categorías seleccionadas
        var categoriasSeleccionadas = $(":checkbox:checked")
            .map(function () {
                return $(this).val();
            }).get();

        // Construir URL con parámetros
        var url = new URL(window.location);
        url.searchParams.set("pagina", 1);

        // Verificar si hay categorías seleccionadas
        if (categoriasSeleccionadas.length > 0) {
            url.searchParams.set("categorias", categoriasSeleccionadas.join(",")) 
        } else {
            url.searchParams.delete("categorias"); // Eliminar el parámetro "categorias" si no hay categorías seleccionadas
        }

        // Redireccionar
        window.location.href = url.toString();

    }
</script>
